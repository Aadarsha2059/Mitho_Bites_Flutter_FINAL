import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:fooddelivery_b/features/cart/presentation/view_model/cart_view_model.dart';
import 'package:fooddelivery_b/features/cart/presentation/event/cart_event.dart';
import 'package:fooddelivery_b/features/cart/domain/entity/cart_item_entity.dart';
import 'package:fooddelivery_b/features/food_products/domain/entity/products_entity.dart';
import 'package:fooddelivery_b/features/cart/presentation/widgets/cart_dialog.dart';

class AddToCartIconButton extends StatelessWidget {
  final ProductsEntity product;

  const AddToCartIconButton({
    super.key,
    required this.product,
  });

  @override
  Widget build(BuildContext context) {
    return Consumer<CartViewModel>(
      builder: (context, cartViewModel, child) {
        return Container(
          decoration: BoxDecoration(
            color: Colors.orange.withOpacity(0.9),
            borderRadius: BorderRadius.circular(20),
          ),
          child: IconButton(
            icon: const Icon(Icons.shopping_cart, color: Colors.white, size: 20),
            onPressed: () => _addToCart(context, cartViewModel),
            padding: const EdgeInsets.all(4),
            constraints: const BoxConstraints(minWidth: 32, minHeight: 32),
          ),
        );
      },
    );
  }

  void _addToCart(BuildContext context, CartViewModel cartViewModel) async {
    try {
      // Create cart item from product
      final cartItem = CartItemEntity(
        cartItemId: null, // Will be generated by backend
        productId: product.productId ?? '', // Handle nullable productId
        productName: product.name,
        productType: 'food',
        productPrice: product.price,
        productDescription: product.description ?? '',
        productImage: product.image,
        categoryId: product.categoryId,
        restaurantId: product.restaurantId,
        isAvailable: product.isAvailable ?? true,
        categoryName: product.categoryName,
        categoryImage: product.categoryImage,
        restaurantName: product.restaurantName,
        restaurantImage: product.restaurantImage,
        restaurantLocation: product.restaurantLocation,
        restaurantContact: product.restaurantContact,
        quantity: 1,
        price: product.price,
        createdAt: DateTime.now(),
        updatedAt: DateTime.now(),
      );

      // Add to cart using the cart view model
      cartViewModel.add(AddToCart(cartItem));
      
      // Show success message
      if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('${product.name} added to cart!'),
            backgroundColor: Colors.green,
            duration: const Duration(seconds: 2),
            action: SnackBarAction(
              label: 'View Cart',
              textColor: Colors.white,
              onPressed: () {
                // Show cart dialog
                CartDialog.show(context);
              },
            ),
          ),
        );

        // Show cart dialog immediately
        CartDialog.show(context);
      }
    } catch (error) {
      // Handle error
      print('Error adding to cart: $error');
      if (context.mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('Failed to add ${product.name} to cart: $error'),
            backgroundColor: Colors.red,
            duration: const Duration(seconds: 2),
          ),
        );
      }
    }
  }
} 